<?php

namespace Nogrod\eBaySDK\BulkDataExchange;

use Nogrod\XMLClientRuntime\Func;

/**
 * Class representing GetRecurringJobsResponseType
 *
 * Type defining the root container of the <b>getRecurringJobs</b> response. The response includes one or more <b>recurringJobDetail</b> containers, and each container consists of a unique identifier for the recurring job, the current status of the recurring job ('Active' or 'Suspended), the frequency of the recurring job (daily, weekly, monthly), and the download job type. The response also includes the standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to retrieve recurring jobs.
 * XSD Type: GetRecurringJobsResponse
 */
class GetRecurringJobsResponseType extends BaseServiceResponseType
{
    /**
     * One or more <b>recurringJobDetail</b> containers are returned for each retrieved recurring job. The <b>recurringJobDetail</b> container consists of a unique identifier for the recurring job, the current status of the recurring job ('Active' or 'Suspended), the frequency of the recurring job (daily, weekly, monthly), and the download job type.
     *
     * @var \Nogrod\eBaySDK\BulkDataExchange\RecurringJobDetailType[] $recurringJobDetail
     */
    private $recurringJobDetail = [
        
    ];

    /**
     * Adds as recurringJobDetail
     *
     * One or more <b>recurringJobDetail</b> containers are returned for each retrieved recurring job. The <b>recurringJobDetail</b> container consists of a unique identifier for the recurring job, the current status of the recurring job ('Active' or 'Suspended), the frequency of the recurring job (daily, weekly, monthly), and the download job type.
     *
     * @return self
     * @param \Nogrod\eBaySDK\BulkDataExchange\RecurringJobDetailType $recurringJobDetail
     */
    public function addToRecurringJobDetail(\Nogrod\eBaySDK\BulkDataExchange\RecurringJobDetailType $recurringJobDetail)
    {
        $this->recurringJobDetail[] = $recurringJobDetail;
        return $this;
    }

    /**
     * isset recurringJobDetail
     *
     * One or more <b>recurringJobDetail</b> containers are returned for each retrieved recurring job. The <b>recurringJobDetail</b> container consists of a unique identifier for the recurring job, the current status of the recurring job ('Active' or 'Suspended), the frequency of the recurring job (daily, weekly, monthly), and the download job type.
     *
     * @param int|string $index
     * @return bool
     */
    public function issetRecurringJobDetail($index)
    {
        return isset($this->recurringJobDetail[$index]);
    }

    /**
     * unset recurringJobDetail
     *
     * One or more <b>recurringJobDetail</b> containers are returned for each retrieved recurring job. The <b>recurringJobDetail</b> container consists of a unique identifier for the recurring job, the current status of the recurring job ('Active' or 'Suspended), the frequency of the recurring job (daily, weekly, monthly), and the download job type.
     *
     * @param int|string $index
     * @return void
     */
    public function unsetRecurringJobDetail($index)
    {
        unset($this->recurringJobDetail[$index]);
    }

    /**
     * Gets as recurringJobDetail
     *
     * One or more <b>recurringJobDetail</b> containers are returned for each retrieved recurring job. The <b>recurringJobDetail</b> container consists of a unique identifier for the recurring job, the current status of the recurring job ('Active' or 'Suspended), the frequency of the recurring job (daily, weekly, monthly), and the download job type.
     *
     * @return \Nogrod\eBaySDK\BulkDataExchange\RecurringJobDetailType[]
     */
    public function getRecurringJobDetail()
    {
        return $this->recurringJobDetail;
    }

    /**
     * Sets a new recurringJobDetail
     *
     * One or more <b>recurringJobDetail</b> containers are returned for each retrieved recurring job. The <b>recurringJobDetail</b> container consists of a unique identifier for the recurring job, the current status of the recurring job ('Active' or 'Suspended), the frequency of the recurring job (daily, weekly, monthly), and the download job type.
     *
     * @param \Nogrod\eBaySDK\BulkDataExchange\RecurringJobDetailType[] $recurringJobDetail
     * @return self
     */
    public function setRecurringJobDetail(array $recurringJobDetail)
    {
        $this->recurringJobDetail = $recurringJobDetail;
        return $this;
    }

    public function xmlSerialize(\Sabre\Xml\Writer $writer)
    {
        parent::xmlSerialize($writer);
        $value = $this->getRecurringJobDetail();
        if (null !== $value && !empty($this->getRecurringJobDetail())) {
            $writer->write(array_map(function ($v) {
                return ["recurringJobDetail" => $v];
            }, $value));
        }
    }

    public static function xmlDeserialize(\Sabre\Xml\Reader $reader)
    {
        return self::fromKeyValue($reader->parseInnerTree([]));
    }

    public static function fromKeyValue($keyValue)
    {
        $self = new self();
        $self->setKeyValue($keyValue);
        return $self;
    }

    public function setKeyValue($keyValue)
    {
        parent::setKeyValue($keyValue);
        $value = Func::mapArray($keyValue, '{http://www.ebay.com/marketplace/services}recurringJobDetail', true);
        if (null !== $value && !empty($value)) {
            $this->setRecurringJobDetail(array_map(function ($v) {
                return \Nogrod\eBaySDK\BulkDataExchange\RecurringJobDetailType::fromKeyValue($v);
            }, $value));
        }
    }
}
