<?php

namespace Nogrod\eBaySDK\BulkDataExchange;

use Nogrod\XMLClientRuntime\Func;

/**
 * Class representing GetJobsRequestType
 *
 * Lists all jobs that have been submitted with this Seller ID that have the job type
 *  specified in the request. You can enter a request with no job type field to see the
 *  status of all of your jobs, you can put a few job type fields in your request to
 *  see the status for specific job types, or you can put a single job type field in
 *  your request.
 * XSD Type: GetJobsRequest
 */
class GetJobsRequestType extends BaseServiceRequestType
{
    /**
     * Use this field to designate the start of a date/time range. By default, 30
     *  days worth of data is returned.
     *
     * @var \DateTime $creationTimeFrom
     */
    private $creationTimeFrom = null;

    /**
     * Use this field to designate the end of a date/time range. Defaults to
     *  current time.
     *
     * @var \DateTime $creationTimeTo
     */
    private $creationTimeTo = null;

    /**
     * Job filter criteria. Default is return all job types.
     *  <br><br>
     *  Each of the Bulk Data Exchange job types corresponds to a Merchant Data
     *  request or response with the same name. The requests or responses are
     *  included within a data file that will be uploaded or downloaded after the
     *  job is created. For instance, if you create an <b>
     *  AddFixedPriceItem</b> job, then the file you are going to upload must
     *  contain <b>AddFixedPriceItem</b> requests - one
     *  request for each item in your data file.
     *  <br><br>
     *  A Bulk Data Exchange job can be associated with just one job type and the
     *  contents of the data file and the job type must match completely. For
     *  example, if you are uploading a data file it can not have both <b>AddFixedPriceItem</b> requests and <b>ReviseFixedPriceItem</b> requests within the same data
     *  file.
     *  <br><br>
     *  The following value definitions describe the request or response associated
     *  with each job type.
     *  <br><br>
     *  For more information about creating and uploading data files, see the Large
     *  Merchant Services User Guide.
     *  <br><br>
     *  <dl>
     *  <dt><strong>Applicable values:</strong></dt>
     *  <dt><strong>ActiveInventoryReport</strong></dt>
     *  <dd>
     *  Download job for a report that contains all of the active listings for a
     *  specific seller ID. The eBay servers read the credential information
     *  passed in by the seller's application to determine which seller's data to
     *  retrieve.
     *  </dd>
     *  <dt><strong>AddFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to add fixed-price items and lists it on a
     *  specified eBay site.
     *  </dd>
     *  <dt><strong>AddItem</strong></dt>
     *  <dd>
     *  Upload job for requests to Defines a single new item and lists it on a
     *  specified eBay site.
     *  </dd>
     *  <dt><strong>EndFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to end specified fixed-price item listings before
     *  the date and time at which they would normally end (per the listing
     *  duration).
     *  </dd>
     *  <dt><strong>EndItem</strong></dt>
     *  <dd>
     *  Upload job for requests to end specified item listings before the date
     *  and time at which they would normally end (per the listing duration).
     *  </dd>
     *  <dt><strong>FeeSettlementReport</strong></dt>
     *  <dd>
     *  Download job for a report that contains all of the fees the seller has
     *  incurred as invoices are generated by the eBay servers. This report gives
     *  large merchants the ability to look at their fees for many listings in
     *  one file.
     *  </dd>
     *  <dt><strong>OrderAck</strong></dt>
     *  <dd>
     *  Upload job for requests that acknowledge orders have been received. Use
     *  the <b>OrderAck</b> request to acknowledge each
     *  line item in a <b>SoldReport</b> by order ID or
     *  line item ID.
     *  <br><br>
     *  After you send the first <b>OrderAck</b> call,
     *  future <b>SoldReports</b> will only contain
     *  unacknowledged orders or line items.
     *  </dd>
     *  <dt><strong>RelistFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to re-list fixed-price (single or multi-item)
     *  listings that ended without buyers. A listing may be re-listed with the
     *  same item properties as the original or the seller may change a number of
     *  the item's defining properties at re- listing time. The new listing will
     *  have a different item ID than the original one.
     *  </dd>
     *  <dt><strong>RelistItem</strong></dt>
     *  <dd>
     *  Upload job for requests to re-list listings that ended without winning
     *  bidders or buyers. Enables a seller to take a single item (or a single
     *  multi-item listing) and re-list it on a specified eBay site.
     *  </dd>
     *  <dt><strong>ReviseFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to change the properties of a currently active
     *  listing.
     *  <br><br>
     *  If the listing contains multiple items, you can revise most of the fields
     *  in the listing (except Title, currency, product ID, photo display type,
     *  variation details, duration, format, or eBay Giving Works charity), even
     *  after one of the items in the listing has been purchased. To revise
     *  multiple listings, include a ReviseFixedPriceItemRequest once for each
     *  item or listing in your data file, with new information for each item or
     *  listing.
     *  </dd>
     *  <dt><strong>ReviseInventoryStatus</strong></dt>
     *  <dd>
     *  Upload job for requests to change the price and quantity of a currently
     *  active fixed-price listing. Inputs are the item IDs or SKUs of the
     *  listings being revised, and price and quantity that are being changed for
     *  each revision.
     *  <br><br>
     *  You can use SKU as input only for fixed-price listings that are managed
     *  by SKU (i.e., <b>InventoryTrackingMethod</b> is
     *  set to SKU). <b>ItemID</b> can be used in either
     *  case.
     *  </dd>
     *  <dt><strong>ReviseItem</strong></dt>
     *  <dd>
     *  Upload job for requests to change the properties of active listings.
     *  </dd>
     *  <dt><strong>SetShipmentTrackingInfo</strong></dt>
     *  <dd>
     *  Upload job for requests to specify the shipment tracking information
     *  associated with one package of an order.
     *  </dd>
     *  <dt><strong>SoldReport</strong></dt>
     *  <dd>
     *  Download job for a report that lists all items that have been sold by
     *  this seller (sold items that were submitted to the Large Merchant Service
     *  by the seller's application).
     *  <br><br>
     *  When an item is sold, the eBay application creates an 'order' for the
     *  seller. If only one item is sold, there is one order ID and one line item
     *  ID associated with the sale. However, if multiple items are sold as part
     *  of the same transaction, there is one order ID for the sale, and multiple
     *  line item IDs - one line item ID for each item sold.
     *  <br><br>
     *  Therefore, the Sold Report returns the order IDs and line item IDs for
     *  every order associated with the seller who is making the request. Sellers
     *  use this information to make inventory updates and start order
     *  fulfillment.
     *  <br><br>
     *  When orders have been fulfilled, the seller will probably want to remove
     *  them from the list of all orders that comes back every time they receive
     *  a SoldReport. To do this, they can acknowledge each order that has been
     *  fulfulled (using order ID or line item ID) by uploading a list of the
     *  fulfulled order information using an <b
     *  class="con">OrderAck</b> request.
     *  <br><br>
     *  After you upload a data file with an <b
     *  class="con">OrderAck</b> request, the orders (or line items
     *  within an order) will no longer appear in the <b>
     *  SoldReport</b>. (After you send the first <b>
     *  OrderAck</b> call, future <b
     *  class="con">SoldReports</b> that you request will only contain
     *  unacknowledged orders and line items.)
     *  </dd>
     *  <dt><strong>UploadSiteHostedPictures</strong></dt>
     *  <dd>
     *  Upload job for requests to upload pictures to EPS (eBay Picture
     *  Services). Each request contains a URL in the <b>
     *  ExternalPictureURL</b> field (the location of the picture on an
     *  external web server). Unlike what the call name implies, you can only
     *  upload one picture per request.
     *  </dd>
     *  <dt><strong>VerifyAddFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to test the definition of new fixed-price items
     *  by submitting them to eBay without creating a listing.
     *  </dd>
     *  <dt><strong>VerifyAddItem</strong></dt>
     *  <dd>
     *  Upload job for requests to test the definition of new items and submit
     *  the definition to eBay without creating a listing.
     *  </dd>
     *  </dl>
     *
     * @var string[] $jobType
     */
    private $jobType = [

    ];

    /**
     * The current state of a Bulk Data Exchange job.
     *
     * @var string[] $jobStatus
     */
    private $jobStatus = [

    ];

    /**
     * Gets as creationTimeFrom
     *
     * Use this field to designate the start of a date/time range. By default, 30
     *  days worth of data is returned.
     *
     * @return \DateTime
     */
    public function getCreationTimeFrom()
    {
        return $this->creationTimeFrom;
    }

    /**
     * Sets a new creationTimeFrom
     *
     * Use this field to designate the start of a date/time range. By default, 30
     *  days worth of data is returned.
     *
     * @param \DateTime $creationTimeFrom
     * @return self
     */
    public function setCreationTimeFrom(\DateTime $creationTimeFrom)
    {
        $this->creationTimeFrom = $creationTimeFrom;
        return $this;
    }

    /**
     * Gets as creationTimeTo
     *
     * Use this field to designate the end of a date/time range. Defaults to
     *  current time.
     *
     * @return \DateTime
     */
    public function getCreationTimeTo()
    {
        return $this->creationTimeTo;
    }

    /**
     * Sets a new creationTimeTo
     *
     * Use this field to designate the end of a date/time range. Defaults to
     *  current time.
     *
     * @param \DateTime $creationTimeTo
     * @return self
     */
    public function setCreationTimeTo(\DateTime $creationTimeTo)
    {
        $this->creationTimeTo = $creationTimeTo;
        return $this;
    }

    /**
     * Adds as jobType
     *
     * Job filter criteria. Default is return all job types.
     *  <br><br>
     *  Each of the Bulk Data Exchange job types corresponds to a Merchant Data
     *  request or response with the same name. The requests or responses are
     *  included within a data file that will be uploaded or downloaded after the
     *  job is created. For instance, if you create an <b>
     *  AddFixedPriceItem</b> job, then the file you are going to upload must
     *  contain <b>AddFixedPriceItem</b> requests - one
     *  request for each item in your data file.
     *  <br><br>
     *  A Bulk Data Exchange job can be associated with just one job type and the
     *  contents of the data file and the job type must match completely. For
     *  example, if you are uploading a data file it can not have both <b>AddFixedPriceItem</b> requests and <b>ReviseFixedPriceItem</b> requests within the same data
     *  file.
     *  <br><br>
     *  The following value definitions describe the request or response associated
     *  with each job type.
     *  <br><br>
     *  For more information about creating and uploading data files, see the Large
     *  Merchant Services User Guide.
     *  <br><br>
     *  <dl>
     *  <dt><strong>Applicable values:</strong></dt>
     *  <dt><strong>ActiveInventoryReport</strong></dt>
     *  <dd>
     *  Download job for a report that contains all of the active listings for a
     *  specific seller ID. The eBay servers read the credential information
     *  passed in by the seller's application to determine which seller's data to
     *  retrieve.
     *  </dd>
     *  <dt><strong>AddFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to add fixed-price items and lists it on a
     *  specified eBay site.
     *  </dd>
     *  <dt><strong>AddItem</strong></dt>
     *  <dd>
     *  Upload job for requests to Defines a single new item and lists it on a
     *  specified eBay site.
     *  </dd>
     *  <dt><strong>EndFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to end specified fixed-price item listings before
     *  the date and time at which they would normally end (per the listing
     *  duration).
     *  </dd>
     *  <dt><strong>EndItem</strong></dt>
     *  <dd>
     *  Upload job for requests to end specified item listings before the date
     *  and time at which they would normally end (per the listing duration).
     *  </dd>
     *  <dt><strong>FeeSettlementReport</strong></dt>
     *  <dd>
     *  Download job for a report that contains all of the fees the seller has
     *  incurred as invoices are generated by the eBay servers. This report gives
     *  large merchants the ability to look at their fees for many listings in
     *  one file.
     *  </dd>
     *  <dt><strong>OrderAck</strong></dt>
     *  <dd>
     *  Upload job for requests that acknowledge orders have been received. Use
     *  the <b>OrderAck</b> request to acknowledge each
     *  line item in a <b>SoldReport</b> by order ID or
     *  line item ID.
     *  <br><br>
     *  After you send the first <b>OrderAck</b> call,
     *  future <b>SoldReports</b> will only contain
     *  unacknowledged orders or line items.
     *  </dd>
     *  <dt><strong>RelistFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to re-list fixed-price (single or multi-item)
     *  listings that ended without buyers. A listing may be re-listed with the
     *  same item properties as the original or the seller may change a number of
     *  the item's defining properties at re- listing time. The new listing will
     *  have a different item ID than the original one.
     *  </dd>
     *  <dt><strong>RelistItem</strong></dt>
     *  <dd>
     *  Upload job for requests to re-list listings that ended without winning
     *  bidders or buyers. Enables a seller to take a single item (or a single
     *  multi-item listing) and re-list it on a specified eBay site.
     *  </dd>
     *  <dt><strong>ReviseFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to change the properties of a currently active
     *  listing.
     *  <br><br>
     *  If the listing contains multiple items, you can revise most of the fields
     *  in the listing (except Title, currency, product ID, photo display type,
     *  variation details, duration, format, or eBay Giving Works charity), even
     *  after one of the items in the listing has been purchased. To revise
     *  multiple listings, include a ReviseFixedPriceItemRequest once for each
     *  item or listing in your data file, with new information for each item or
     *  listing.
     *  </dd>
     *  <dt><strong>ReviseInventoryStatus</strong></dt>
     *  <dd>
     *  Upload job for requests to change the price and quantity of a currently
     *  active fixed-price listing. Inputs are the item IDs or SKUs of the
     *  listings being revised, and price and quantity that are being changed for
     *  each revision.
     *  <br><br>
     *  You can use SKU as input only for fixed-price listings that are managed
     *  by SKU (i.e., <b>InventoryTrackingMethod</b> is
     *  set to SKU). <b>ItemID</b> can be used in either
     *  case.
     *  </dd>
     *  <dt><strong>ReviseItem</strong></dt>
     *  <dd>
     *  Upload job for requests to change the properties of active listings.
     *  </dd>
     *  <dt><strong>SetShipmentTrackingInfo</strong></dt>
     *  <dd>
     *  Upload job for requests to specify the shipment tracking information
     *  associated with one package of an order.
     *  </dd>
     *  <dt><strong>SoldReport</strong></dt>
     *  <dd>
     *  Download job for a report that lists all items that have been sold by
     *  this seller (sold items that were submitted to the Large Merchant Service
     *  by the seller's application).
     *  <br><br>
     *  When an item is sold, the eBay application creates an 'order' for the
     *  seller. If only one item is sold, there is one order ID and one line item
     *  ID associated with the sale. However, if multiple items are sold as part
     *  of the same transaction, there is one order ID for the sale, and multiple
     *  line item IDs - one line item ID for each item sold.
     *  <br><br>
     *  Therefore, the Sold Report returns the order IDs and line item IDs for
     *  every order associated with the seller who is making the request. Sellers
     *  use this information to make inventory updates and start order
     *  fulfillment.
     *  <br><br>
     *  When orders have been fulfilled, the seller will probably want to remove
     *  them from the list of all orders that comes back every time they receive
     *  a SoldReport. To do this, they can acknowledge each order that has been
     *  fulfulled (using order ID or line item ID) by uploading a list of the
     *  fulfulled order information using an <b
     *  class="con">OrderAck</b> request.
     *  <br><br>
     *  After you upload a data file with an <b
     *  class="con">OrderAck</b> request, the orders (or line items
     *  within an order) will no longer appear in the <b>
     *  SoldReport</b>. (After you send the first <b>
     *  OrderAck</b> call, future <b
     *  class="con">SoldReports</b> that you request will only contain
     *  unacknowledged orders and line items.)
     *  </dd>
     *  <dt><strong>UploadSiteHostedPictures</strong></dt>
     *  <dd>
     *  Upload job for requests to upload pictures to EPS (eBay Picture
     *  Services). Each request contains a URL in the <b>
     *  ExternalPictureURL</b> field (the location of the picture on an
     *  external web server). Unlike what the call name implies, you can only
     *  upload one picture per request.
     *  </dd>
     *  <dt><strong>VerifyAddFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to test the definition of new fixed-price items
     *  by submitting them to eBay without creating a listing.
     *  </dd>
     *  <dt><strong>VerifyAddItem</strong></dt>
     *  <dd>
     *  Upload job for requests to test the definition of new items and submit
     *  the definition to eBay without creating a listing.
     *  </dd>
     *  </dl>
     *
     * @return self
     * @param string $jobType
     */
    public function addToJobType($jobType)
    {
        $this->jobType[] = $jobType;
        return $this;
    }

    /**
     * isset jobType
     *
     * Job filter criteria. Default is return all job types.
     *  <br><br>
     *  Each of the Bulk Data Exchange job types corresponds to a Merchant Data
     *  request or response with the same name. The requests or responses are
     *  included within a data file that will be uploaded or downloaded after the
     *  job is created. For instance, if you create an <b>
     *  AddFixedPriceItem</b> job, then the file you are going to upload must
     *  contain <b>AddFixedPriceItem</b> requests - one
     *  request for each item in your data file.
     *  <br><br>
     *  A Bulk Data Exchange job can be associated with just one job type and the
     *  contents of the data file and the job type must match completely. For
     *  example, if you are uploading a data file it can not have both <b>AddFixedPriceItem</b> requests and <b>ReviseFixedPriceItem</b> requests within the same data
     *  file.
     *  <br><br>
     *  The following value definitions describe the request or response associated
     *  with each job type.
     *  <br><br>
     *  For more information about creating and uploading data files, see the Large
     *  Merchant Services User Guide.
     *  <br><br>
     *  <dl>
     *  <dt><strong>Applicable values:</strong></dt>
     *  <dt><strong>ActiveInventoryReport</strong></dt>
     *  <dd>
     *  Download job for a report that contains all of the active listings for a
     *  specific seller ID. The eBay servers read the credential information
     *  passed in by the seller's application to determine which seller's data to
     *  retrieve.
     *  </dd>
     *  <dt><strong>AddFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to add fixed-price items and lists it on a
     *  specified eBay site.
     *  </dd>
     *  <dt><strong>AddItem</strong></dt>
     *  <dd>
     *  Upload job for requests to Defines a single new item and lists it on a
     *  specified eBay site.
     *  </dd>
     *  <dt><strong>EndFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to end specified fixed-price item listings before
     *  the date and time at which they would normally end (per the listing
     *  duration).
     *  </dd>
     *  <dt><strong>EndItem</strong></dt>
     *  <dd>
     *  Upload job for requests to end specified item listings before the date
     *  and time at which they would normally end (per the listing duration).
     *  </dd>
     *  <dt><strong>FeeSettlementReport</strong></dt>
     *  <dd>
     *  Download job for a report that contains all of the fees the seller has
     *  incurred as invoices are generated by the eBay servers. This report gives
     *  large merchants the ability to look at their fees for many listings in
     *  one file.
     *  </dd>
     *  <dt><strong>OrderAck</strong></dt>
     *  <dd>
     *  Upload job for requests that acknowledge orders have been received. Use
     *  the <b>OrderAck</b> request to acknowledge each
     *  line item in a <b>SoldReport</b> by order ID or
     *  line item ID.
     *  <br><br>
     *  After you send the first <b>OrderAck</b> call,
     *  future <b>SoldReports</b> will only contain
     *  unacknowledged orders or line items.
     *  </dd>
     *  <dt><strong>RelistFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to re-list fixed-price (single or multi-item)
     *  listings that ended without buyers. A listing may be re-listed with the
     *  same item properties as the original or the seller may change a number of
     *  the item's defining properties at re- listing time. The new listing will
     *  have a different item ID than the original one.
     *  </dd>
     *  <dt><strong>RelistItem</strong></dt>
     *  <dd>
     *  Upload job for requests to re-list listings that ended without winning
     *  bidders or buyers. Enables a seller to take a single item (or a single
     *  multi-item listing) and re-list it on a specified eBay site.
     *  </dd>
     *  <dt><strong>ReviseFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to change the properties of a currently active
     *  listing.
     *  <br><br>
     *  If the listing contains multiple items, you can revise most of the fields
     *  in the listing (except Title, currency, product ID, photo display type,
     *  variation details, duration, format, or eBay Giving Works charity), even
     *  after one of the items in the listing has been purchased. To revise
     *  multiple listings, include a ReviseFixedPriceItemRequest once for each
     *  item or listing in your data file, with new information for each item or
     *  listing.
     *  </dd>
     *  <dt><strong>ReviseInventoryStatus</strong></dt>
     *  <dd>
     *  Upload job for requests to change the price and quantity of a currently
     *  active fixed-price listing. Inputs are the item IDs or SKUs of the
     *  listings being revised, and price and quantity that are being changed for
     *  each revision.
     *  <br><br>
     *  You can use SKU as input only for fixed-price listings that are managed
     *  by SKU (i.e., <b>InventoryTrackingMethod</b> is
     *  set to SKU). <b>ItemID</b> can be used in either
     *  case.
     *  </dd>
     *  <dt><strong>ReviseItem</strong></dt>
     *  <dd>
     *  Upload job for requests to change the properties of active listings.
     *  </dd>
     *  <dt><strong>SetShipmentTrackingInfo</strong></dt>
     *  <dd>
     *  Upload job for requests to specify the shipment tracking information
     *  associated with one package of an order.
     *  </dd>
     *  <dt><strong>SoldReport</strong></dt>
     *  <dd>
     *  Download job for a report that lists all items that have been sold by
     *  this seller (sold items that were submitted to the Large Merchant Service
     *  by the seller's application).
     *  <br><br>
     *  When an item is sold, the eBay application creates an 'order' for the
     *  seller. If only one item is sold, there is one order ID and one line item
     *  ID associated with the sale. However, if multiple items are sold as part
     *  of the same transaction, there is one order ID for the sale, and multiple
     *  line item IDs - one line item ID for each item sold.
     *  <br><br>
     *  Therefore, the Sold Report returns the order IDs and line item IDs for
     *  every order associated with the seller who is making the request. Sellers
     *  use this information to make inventory updates and start order
     *  fulfillment.
     *  <br><br>
     *  When orders have been fulfilled, the seller will probably want to remove
     *  them from the list of all orders that comes back every time they receive
     *  a SoldReport. To do this, they can acknowledge each order that has been
     *  fulfulled (using order ID or line item ID) by uploading a list of the
     *  fulfulled order information using an <b
     *  class="con">OrderAck</b> request.
     *  <br><br>
     *  After you upload a data file with an <b
     *  class="con">OrderAck</b> request, the orders (or line items
     *  within an order) will no longer appear in the <b>
     *  SoldReport</b>. (After you send the first <b>
     *  OrderAck</b> call, future <b
     *  class="con">SoldReports</b> that you request will only contain
     *  unacknowledged orders and line items.)
     *  </dd>
     *  <dt><strong>UploadSiteHostedPictures</strong></dt>
     *  <dd>
     *  Upload job for requests to upload pictures to EPS (eBay Picture
     *  Services). Each request contains a URL in the <b>
     *  ExternalPictureURL</b> field (the location of the picture on an
     *  external web server). Unlike what the call name implies, you can only
     *  upload one picture per request.
     *  </dd>
     *  <dt><strong>VerifyAddFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to test the definition of new fixed-price items
     *  by submitting them to eBay without creating a listing.
     *  </dd>
     *  <dt><strong>VerifyAddItem</strong></dt>
     *  <dd>
     *  Upload job for requests to test the definition of new items and submit
     *  the definition to eBay without creating a listing.
     *  </dd>
     *  </dl>
     *
     * @param int|string $index
     * @return bool
     */
    public function issetJobType($index)
    {
        return isset($this->jobType[$index]);
    }

    /**
     * unset jobType
     *
     * Job filter criteria. Default is return all job types.
     *  <br><br>
     *  Each of the Bulk Data Exchange job types corresponds to a Merchant Data
     *  request or response with the same name. The requests or responses are
     *  included within a data file that will be uploaded or downloaded after the
     *  job is created. For instance, if you create an <b>
     *  AddFixedPriceItem</b> job, then the file you are going to upload must
     *  contain <b>AddFixedPriceItem</b> requests - one
     *  request for each item in your data file.
     *  <br><br>
     *  A Bulk Data Exchange job can be associated with just one job type and the
     *  contents of the data file and the job type must match completely. For
     *  example, if you are uploading a data file it can not have both <b>AddFixedPriceItem</b> requests and <b>ReviseFixedPriceItem</b> requests within the same data
     *  file.
     *  <br><br>
     *  The following value definitions describe the request or response associated
     *  with each job type.
     *  <br><br>
     *  For more information about creating and uploading data files, see the Large
     *  Merchant Services User Guide.
     *  <br><br>
     *  <dl>
     *  <dt><strong>Applicable values:</strong></dt>
     *  <dt><strong>ActiveInventoryReport</strong></dt>
     *  <dd>
     *  Download job for a report that contains all of the active listings for a
     *  specific seller ID. The eBay servers read the credential information
     *  passed in by the seller's application to determine which seller's data to
     *  retrieve.
     *  </dd>
     *  <dt><strong>AddFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to add fixed-price items and lists it on a
     *  specified eBay site.
     *  </dd>
     *  <dt><strong>AddItem</strong></dt>
     *  <dd>
     *  Upload job for requests to Defines a single new item and lists it on a
     *  specified eBay site.
     *  </dd>
     *  <dt><strong>EndFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to end specified fixed-price item listings before
     *  the date and time at which they would normally end (per the listing
     *  duration).
     *  </dd>
     *  <dt><strong>EndItem</strong></dt>
     *  <dd>
     *  Upload job for requests to end specified item listings before the date
     *  and time at which they would normally end (per the listing duration).
     *  </dd>
     *  <dt><strong>FeeSettlementReport</strong></dt>
     *  <dd>
     *  Download job for a report that contains all of the fees the seller has
     *  incurred as invoices are generated by the eBay servers. This report gives
     *  large merchants the ability to look at their fees for many listings in
     *  one file.
     *  </dd>
     *  <dt><strong>OrderAck</strong></dt>
     *  <dd>
     *  Upload job for requests that acknowledge orders have been received. Use
     *  the <b>OrderAck</b> request to acknowledge each
     *  line item in a <b>SoldReport</b> by order ID or
     *  line item ID.
     *  <br><br>
     *  After you send the first <b>OrderAck</b> call,
     *  future <b>SoldReports</b> will only contain
     *  unacknowledged orders or line items.
     *  </dd>
     *  <dt><strong>RelistFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to re-list fixed-price (single or multi-item)
     *  listings that ended without buyers. A listing may be re-listed with the
     *  same item properties as the original or the seller may change a number of
     *  the item's defining properties at re- listing time. The new listing will
     *  have a different item ID than the original one.
     *  </dd>
     *  <dt><strong>RelistItem</strong></dt>
     *  <dd>
     *  Upload job for requests to re-list listings that ended without winning
     *  bidders or buyers. Enables a seller to take a single item (or a single
     *  multi-item listing) and re-list it on a specified eBay site.
     *  </dd>
     *  <dt><strong>ReviseFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to change the properties of a currently active
     *  listing.
     *  <br><br>
     *  If the listing contains multiple items, you can revise most of the fields
     *  in the listing (except Title, currency, product ID, photo display type,
     *  variation details, duration, format, or eBay Giving Works charity), even
     *  after one of the items in the listing has been purchased. To revise
     *  multiple listings, include a ReviseFixedPriceItemRequest once for each
     *  item or listing in your data file, with new information for each item or
     *  listing.
     *  </dd>
     *  <dt><strong>ReviseInventoryStatus</strong></dt>
     *  <dd>
     *  Upload job for requests to change the price and quantity of a currently
     *  active fixed-price listing. Inputs are the item IDs or SKUs of the
     *  listings being revised, and price and quantity that are being changed for
     *  each revision.
     *  <br><br>
     *  You can use SKU as input only for fixed-price listings that are managed
     *  by SKU (i.e., <b>InventoryTrackingMethod</b> is
     *  set to SKU). <b>ItemID</b> can be used in either
     *  case.
     *  </dd>
     *  <dt><strong>ReviseItem</strong></dt>
     *  <dd>
     *  Upload job for requests to change the properties of active listings.
     *  </dd>
     *  <dt><strong>SetShipmentTrackingInfo</strong></dt>
     *  <dd>
     *  Upload job for requests to specify the shipment tracking information
     *  associated with one package of an order.
     *  </dd>
     *  <dt><strong>SoldReport</strong></dt>
     *  <dd>
     *  Download job for a report that lists all items that have been sold by
     *  this seller (sold items that were submitted to the Large Merchant Service
     *  by the seller's application).
     *  <br><br>
     *  When an item is sold, the eBay application creates an 'order' for the
     *  seller. If only one item is sold, there is one order ID and one line item
     *  ID associated with the sale. However, if multiple items are sold as part
     *  of the same transaction, there is one order ID for the sale, and multiple
     *  line item IDs - one line item ID for each item sold.
     *  <br><br>
     *  Therefore, the Sold Report returns the order IDs and line item IDs for
     *  every order associated with the seller who is making the request. Sellers
     *  use this information to make inventory updates and start order
     *  fulfillment.
     *  <br><br>
     *  When orders have been fulfilled, the seller will probably want to remove
     *  them from the list of all orders that comes back every time they receive
     *  a SoldReport. To do this, they can acknowledge each order that has been
     *  fulfulled (using order ID or line item ID) by uploading a list of the
     *  fulfulled order information using an <b
     *  class="con">OrderAck</b> request.
     *  <br><br>
     *  After you upload a data file with an <b
     *  class="con">OrderAck</b> request, the orders (or line items
     *  within an order) will no longer appear in the <b>
     *  SoldReport</b>. (After you send the first <b>
     *  OrderAck</b> call, future <b
     *  class="con">SoldReports</b> that you request will only contain
     *  unacknowledged orders and line items.)
     *  </dd>
     *  <dt><strong>UploadSiteHostedPictures</strong></dt>
     *  <dd>
     *  Upload job for requests to upload pictures to EPS (eBay Picture
     *  Services). Each request contains a URL in the <b>
     *  ExternalPictureURL</b> field (the location of the picture on an
     *  external web server). Unlike what the call name implies, you can only
     *  upload one picture per request.
     *  </dd>
     *  <dt><strong>VerifyAddFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to test the definition of new fixed-price items
     *  by submitting them to eBay without creating a listing.
     *  </dd>
     *  <dt><strong>VerifyAddItem</strong></dt>
     *  <dd>
     *  Upload job for requests to test the definition of new items and submit
     *  the definition to eBay without creating a listing.
     *  </dd>
     *  </dl>
     *
     * @param int|string $index
     * @return void
     */
    public function unsetJobType($index)
    {
        unset($this->jobType[$index]);
    }

    /**
     * Gets as jobType
     *
     * Job filter criteria. Default is return all job types.
     *  <br><br>
     *  Each of the Bulk Data Exchange job types corresponds to a Merchant Data
     *  request or response with the same name. The requests or responses are
     *  included within a data file that will be uploaded or downloaded after the
     *  job is created. For instance, if you create an <b>
     *  AddFixedPriceItem</b> job, then the file you are going to upload must
     *  contain <b>AddFixedPriceItem</b> requests - one
     *  request for each item in your data file.
     *  <br><br>
     *  A Bulk Data Exchange job can be associated with just one job type and the
     *  contents of the data file and the job type must match completely. For
     *  example, if you are uploading a data file it can not have both <b>AddFixedPriceItem</b> requests and <b>ReviseFixedPriceItem</b> requests within the same data
     *  file.
     *  <br><br>
     *  The following value definitions describe the request or response associated
     *  with each job type.
     *  <br><br>
     *  For more information about creating and uploading data files, see the Large
     *  Merchant Services User Guide.
     *  <br><br>
     *  <dl>
     *  <dt><strong>Applicable values:</strong></dt>
     *  <dt><strong>ActiveInventoryReport</strong></dt>
     *  <dd>
     *  Download job for a report that contains all of the active listings for a
     *  specific seller ID. The eBay servers read the credential information
     *  passed in by the seller's application to determine which seller's data to
     *  retrieve.
     *  </dd>
     *  <dt><strong>AddFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to add fixed-price items and lists it on a
     *  specified eBay site.
     *  </dd>
     *  <dt><strong>AddItem</strong></dt>
     *  <dd>
     *  Upload job for requests to Defines a single new item and lists it on a
     *  specified eBay site.
     *  </dd>
     *  <dt><strong>EndFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to end specified fixed-price item listings before
     *  the date and time at which they would normally end (per the listing
     *  duration).
     *  </dd>
     *  <dt><strong>EndItem</strong></dt>
     *  <dd>
     *  Upload job for requests to end specified item listings before the date
     *  and time at which they would normally end (per the listing duration).
     *  </dd>
     *  <dt><strong>FeeSettlementReport</strong></dt>
     *  <dd>
     *  Download job for a report that contains all of the fees the seller has
     *  incurred as invoices are generated by the eBay servers. This report gives
     *  large merchants the ability to look at their fees for many listings in
     *  one file.
     *  </dd>
     *  <dt><strong>OrderAck</strong></dt>
     *  <dd>
     *  Upload job for requests that acknowledge orders have been received. Use
     *  the <b>OrderAck</b> request to acknowledge each
     *  line item in a <b>SoldReport</b> by order ID or
     *  line item ID.
     *  <br><br>
     *  After you send the first <b>OrderAck</b> call,
     *  future <b>SoldReports</b> will only contain
     *  unacknowledged orders or line items.
     *  </dd>
     *  <dt><strong>RelistFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to re-list fixed-price (single or multi-item)
     *  listings that ended without buyers. A listing may be re-listed with the
     *  same item properties as the original or the seller may change a number of
     *  the item's defining properties at re- listing time. The new listing will
     *  have a different item ID than the original one.
     *  </dd>
     *  <dt><strong>RelistItem</strong></dt>
     *  <dd>
     *  Upload job for requests to re-list listings that ended without winning
     *  bidders or buyers. Enables a seller to take a single item (or a single
     *  multi-item listing) and re-list it on a specified eBay site.
     *  </dd>
     *  <dt><strong>ReviseFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to change the properties of a currently active
     *  listing.
     *  <br><br>
     *  If the listing contains multiple items, you can revise most of the fields
     *  in the listing (except Title, currency, product ID, photo display type,
     *  variation details, duration, format, or eBay Giving Works charity), even
     *  after one of the items in the listing has been purchased. To revise
     *  multiple listings, include a ReviseFixedPriceItemRequest once for each
     *  item or listing in your data file, with new information for each item or
     *  listing.
     *  </dd>
     *  <dt><strong>ReviseInventoryStatus</strong></dt>
     *  <dd>
     *  Upload job for requests to change the price and quantity of a currently
     *  active fixed-price listing. Inputs are the item IDs or SKUs of the
     *  listings being revised, and price and quantity that are being changed for
     *  each revision.
     *  <br><br>
     *  You can use SKU as input only for fixed-price listings that are managed
     *  by SKU (i.e., <b>InventoryTrackingMethod</b> is
     *  set to SKU). <b>ItemID</b> can be used in either
     *  case.
     *  </dd>
     *  <dt><strong>ReviseItem</strong></dt>
     *  <dd>
     *  Upload job for requests to change the properties of active listings.
     *  </dd>
     *  <dt><strong>SetShipmentTrackingInfo</strong></dt>
     *  <dd>
     *  Upload job for requests to specify the shipment tracking information
     *  associated with one package of an order.
     *  </dd>
     *  <dt><strong>SoldReport</strong></dt>
     *  <dd>
     *  Download job for a report that lists all items that have been sold by
     *  this seller (sold items that were submitted to the Large Merchant Service
     *  by the seller's application).
     *  <br><br>
     *  When an item is sold, the eBay application creates an 'order' for the
     *  seller. If only one item is sold, there is one order ID and one line item
     *  ID associated with the sale. However, if multiple items are sold as part
     *  of the same transaction, there is one order ID for the sale, and multiple
     *  line item IDs - one line item ID for each item sold.
     *  <br><br>
     *  Therefore, the Sold Report returns the order IDs and line item IDs for
     *  every order associated with the seller who is making the request. Sellers
     *  use this information to make inventory updates and start order
     *  fulfillment.
     *  <br><br>
     *  When orders have been fulfilled, the seller will probably want to remove
     *  them from the list of all orders that comes back every time they receive
     *  a SoldReport. To do this, they can acknowledge each order that has been
     *  fulfulled (using order ID or line item ID) by uploading a list of the
     *  fulfulled order information using an <b
     *  class="con">OrderAck</b> request.
     *  <br><br>
     *  After you upload a data file with an <b
     *  class="con">OrderAck</b> request, the orders (or line items
     *  within an order) will no longer appear in the <b>
     *  SoldReport</b>. (After you send the first <b>
     *  OrderAck</b> call, future <b
     *  class="con">SoldReports</b> that you request will only contain
     *  unacknowledged orders and line items.)
     *  </dd>
     *  <dt><strong>UploadSiteHostedPictures</strong></dt>
     *  <dd>
     *  Upload job for requests to upload pictures to EPS (eBay Picture
     *  Services). Each request contains a URL in the <b>
     *  ExternalPictureURL</b> field (the location of the picture on an
     *  external web server). Unlike what the call name implies, you can only
     *  upload one picture per request.
     *  </dd>
     *  <dt><strong>VerifyAddFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to test the definition of new fixed-price items
     *  by submitting them to eBay without creating a listing.
     *  </dd>
     *  <dt><strong>VerifyAddItem</strong></dt>
     *  <dd>
     *  Upload job for requests to test the definition of new items and submit
     *  the definition to eBay without creating a listing.
     *  </dd>
     *  </dl>
     *
     * @return string[]
     */
    public function getJobType()
    {
        return $this->jobType;
    }

    /**
     * Sets a new jobType
     *
     * Job filter criteria. Default is return all job types.
     *  <br><br>
     *  Each of the Bulk Data Exchange job types corresponds to a Merchant Data
     *  request or response with the same name. The requests or responses are
     *  included within a data file that will be uploaded or downloaded after the
     *  job is created. For instance, if you create an <b>
     *  AddFixedPriceItem</b> job, then the file you are going to upload must
     *  contain <b>AddFixedPriceItem</b> requests - one
     *  request for each item in your data file.
     *  <br><br>
     *  A Bulk Data Exchange job can be associated with just one job type and the
     *  contents of the data file and the job type must match completely. For
     *  example, if you are uploading a data file it can not have both <b>AddFixedPriceItem</b> requests and <b>ReviseFixedPriceItem</b> requests within the same data
     *  file.
     *  <br><br>
     *  The following value definitions describe the request or response associated
     *  with each job type.
     *  <br><br>
     *  For more information about creating and uploading data files, see the Large
     *  Merchant Services User Guide.
     *  <br><br>
     *  <dl>
     *  <dt><strong>Applicable values:</strong></dt>
     *  <dt><strong>ActiveInventoryReport</strong></dt>
     *  <dd>
     *  Download job for a report that contains all of the active listings for a
     *  specific seller ID. The eBay servers read the credential information
     *  passed in by the seller's application to determine which seller's data to
     *  retrieve.
     *  </dd>
     *  <dt><strong>AddFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to add fixed-price items and lists it on a
     *  specified eBay site.
     *  </dd>
     *  <dt><strong>AddItem</strong></dt>
     *  <dd>
     *  Upload job for requests to Defines a single new item and lists it on a
     *  specified eBay site.
     *  </dd>
     *  <dt><strong>EndFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to end specified fixed-price item listings before
     *  the date and time at which they would normally end (per the listing
     *  duration).
     *  </dd>
     *  <dt><strong>EndItem</strong></dt>
     *  <dd>
     *  Upload job for requests to end specified item listings before the date
     *  and time at which they would normally end (per the listing duration).
     *  </dd>
     *  <dt><strong>FeeSettlementReport</strong></dt>
     *  <dd>
     *  Download job for a report that contains all of the fees the seller has
     *  incurred as invoices are generated by the eBay servers. This report gives
     *  large merchants the ability to look at their fees for many listings in
     *  one file.
     *  </dd>
     *  <dt><strong>OrderAck</strong></dt>
     *  <dd>
     *  Upload job for requests that acknowledge orders have been received. Use
     *  the <b>OrderAck</b> request to acknowledge each
     *  line item in a <b>SoldReport</b> by order ID or
     *  line item ID.
     *  <br><br>
     *  After you send the first <b>OrderAck</b> call,
     *  future <b>SoldReports</b> will only contain
     *  unacknowledged orders or line items.
     *  </dd>
     *  <dt><strong>RelistFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to re-list fixed-price (single or multi-item)
     *  listings that ended without buyers. A listing may be re-listed with the
     *  same item properties as the original or the seller may change a number of
     *  the item's defining properties at re- listing time. The new listing will
     *  have a different item ID than the original one.
     *  </dd>
     *  <dt><strong>RelistItem</strong></dt>
     *  <dd>
     *  Upload job for requests to re-list listings that ended without winning
     *  bidders or buyers. Enables a seller to take a single item (or a single
     *  multi-item listing) and re-list it on a specified eBay site.
     *  </dd>
     *  <dt><strong>ReviseFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to change the properties of a currently active
     *  listing.
     *  <br><br>
     *  If the listing contains multiple items, you can revise most of the fields
     *  in the listing (except Title, currency, product ID, photo display type,
     *  variation details, duration, format, or eBay Giving Works charity), even
     *  after one of the items in the listing has been purchased. To revise
     *  multiple listings, include a ReviseFixedPriceItemRequest once for each
     *  item or listing in your data file, with new information for each item or
     *  listing.
     *  </dd>
     *  <dt><strong>ReviseInventoryStatus</strong></dt>
     *  <dd>
     *  Upload job for requests to change the price and quantity of a currently
     *  active fixed-price listing. Inputs are the item IDs or SKUs of the
     *  listings being revised, and price and quantity that are being changed for
     *  each revision.
     *  <br><br>
     *  You can use SKU as input only for fixed-price listings that are managed
     *  by SKU (i.e., <b>InventoryTrackingMethod</b> is
     *  set to SKU). <b>ItemID</b> can be used in either
     *  case.
     *  </dd>
     *  <dt><strong>ReviseItem</strong></dt>
     *  <dd>
     *  Upload job for requests to change the properties of active listings.
     *  </dd>
     *  <dt><strong>SetShipmentTrackingInfo</strong></dt>
     *  <dd>
     *  Upload job for requests to specify the shipment tracking information
     *  associated with one package of an order.
     *  </dd>
     *  <dt><strong>SoldReport</strong></dt>
     *  <dd>
     *  Download job for a report that lists all items that have been sold by
     *  this seller (sold items that were submitted to the Large Merchant Service
     *  by the seller's application).
     *  <br><br>
     *  When an item is sold, the eBay application creates an 'order' for the
     *  seller. If only one item is sold, there is one order ID and one line item
     *  ID associated with the sale. However, if multiple items are sold as part
     *  of the same transaction, there is one order ID for the sale, and multiple
     *  line item IDs - one line item ID for each item sold.
     *  <br><br>
     *  Therefore, the Sold Report returns the order IDs and line item IDs for
     *  every order associated with the seller who is making the request. Sellers
     *  use this information to make inventory updates and start order
     *  fulfillment.
     *  <br><br>
     *  When orders have been fulfilled, the seller will probably want to remove
     *  them from the list of all orders that comes back every time they receive
     *  a SoldReport. To do this, they can acknowledge each order that has been
     *  fulfulled (using order ID or line item ID) by uploading a list of the
     *  fulfulled order information using an <b
     *  class="con">OrderAck</b> request.
     *  <br><br>
     *  After you upload a data file with an <b
     *  class="con">OrderAck</b> request, the orders (or line items
     *  within an order) will no longer appear in the <b>
     *  SoldReport</b>. (After you send the first <b>
     *  OrderAck</b> call, future <b
     *  class="con">SoldReports</b> that you request will only contain
     *  unacknowledged orders and line items.)
     *  </dd>
     *  <dt><strong>UploadSiteHostedPictures</strong></dt>
     *  <dd>
     *  Upload job for requests to upload pictures to EPS (eBay Picture
     *  Services). Each request contains a URL in the <b>
     *  ExternalPictureURL</b> field (the location of the picture on an
     *  external web server). Unlike what the call name implies, you can only
     *  upload one picture per request.
     *  </dd>
     *  <dt><strong>VerifyAddFixedPriceItem</strong></dt>
     *  <dd>
     *  Upload job for requests to test the definition of new fixed-price items
     *  by submitting them to eBay without creating a listing.
     *  </dd>
     *  <dt><strong>VerifyAddItem</strong></dt>
     *  <dd>
     *  Upload job for requests to test the definition of new items and submit
     *  the definition to eBay without creating a listing.
     *  </dd>
     *  </dl>
     *
     * @param string[] $jobType
     * @return self
     */
    public function setJobType(array $jobType)
    {
        $this->jobType = $jobType;
        return $this;
    }

    /**
     * Adds as jobStatus
     *
     * The current state of a Bulk Data Exchange job.
     *
     * @return self
     * @param string $jobStatus
     */
    public function addToJobStatus($jobStatus)
    {
        $this->jobStatus[] = $jobStatus;
        return $this;
    }

    /**
     * isset jobStatus
     *
     * The current state of a Bulk Data Exchange job.
     *
     * @param int|string $index
     * @return bool
     */
    public function issetJobStatus($index)
    {
        return isset($this->jobStatus[$index]);
    }

    /**
     * unset jobStatus
     *
     * The current state of a Bulk Data Exchange job.
     *
     * @param int|string $index
     * @return void
     */
    public function unsetJobStatus($index)
    {
        unset($this->jobStatus[$index]);
    }

    /**
     * Gets as jobStatus
     *
     * The current state of a Bulk Data Exchange job.
     *
     * @return string[]
     */
    public function getJobStatus()
    {
        return $this->jobStatus;
    }

    /**
     * Sets a new jobStatus
     *
     * The current state of a Bulk Data Exchange job.
     *
     * @param string $jobStatus
     * @return self
     */
    public function setJobStatus(array $jobStatus)
    {
        $this->jobStatus = $jobStatus;
        return $this;
    }

    public function xmlSerialize(\Sabre\Xml\Writer $writer): void
    {
        parent::xmlSerialize($writer);
        $value = $this->getCreationTimeFrom();
        if (null !== $value) {
            $writer->writeElement("{http://www.ebay.com/marketplace/services}creationTimeFrom", $value);
        }
        $value = $this->getCreationTimeTo();
        if (null !== $value) {
            $writer->writeElement("{http://www.ebay.com/marketplace/services}creationTimeTo", $value);
        }
        $value = $this->getJobType();
        if (null !== $value && !empty($this->getJobType())) {
            $writer->write(array_map(function ($v) {
                return ["jobType" => $v];
            }, $value));
        }
        $value = $this->getJobStatus();
        if (null !== $value && !empty($this->getJobStatus())) {
            $writer->write(array_map(function ($v) {
                return ["jobStatus" => $v];
            }, $value));
        }
    }

    public static function xmlDeserialize(\Sabre\Xml\Reader $reader)
    {
        return self::fromKeyValue($reader->parseInnerTree([]));
    }

    public static function fromKeyValue($keyValue)
    {
        $self = new self();
        $self->setKeyValue($keyValue);
        return $self;
    }

    public function setKeyValue($keyValue)
    {
        parent::setKeyValue($keyValue);
        $value = Func::mapArray($keyValue, '{http://www.ebay.com/marketplace/services}creationTimeFrom');
        if (null !== $value) {
            $this->setCreationTimeFrom(new \DateTime($value));
        }
        $value = Func::mapArray($keyValue, '{http://www.ebay.com/marketplace/services}creationTimeTo');
        if (null !== $value) {
            $this->setCreationTimeTo(new \DateTime($value));
        }
        $value = Func::mapArray($keyValue, '{http://www.ebay.com/marketplace/services}jobType', true);
        if (null !== $value && !empty($value)) {
            $this->setJobType($value);
        }
        $value = Func::mapArray($keyValue, '{http://www.ebay.com/marketplace/services}jobStatus', true);
        if (null !== $value && !empty($value)) {
            $this->setJobStatus($value);
        }
    }
}
