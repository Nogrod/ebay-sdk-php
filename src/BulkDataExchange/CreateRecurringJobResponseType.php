<?php

namespace Nogrod\eBaySDK\BulkDataExchange;

use Nogrod\XMLClientRuntime\Func;

/**
 * Class representing CreateRecurringJobResponseType
 *
 * Type defining the root container of the <b>startDownloadJob</b> response. The response includes the <b>recurringjobId</b> field and the standard output fields like <b>ack</b>, <b>timestamp</b>, <b>version</b>, and any errors/warnings that are generated by the request to create a recurring job.
 * XSD Type: CreateRecurringJobResponse
 */
class CreateRecurringJobResponseType extends BaseServiceResponseType
{
    /**
     * Unique ID that is assigned for the recurring job by the Bulk Data Exchange API
     *  after a successful <b>createRecurringJob</ b> call. This value is passed into the request of other recurring job calls of the File Transfer API.
     *
     * @var string $recurringJobId
     */
    private $recurringJobId = null;

    /**
     * Gets as recurringJobId
     *
     * Unique ID that is assigned for the recurring job by the Bulk Data Exchange API
     *  after a successful <b>createRecurringJob</ b> call. This value is passed into the request of other recurring job calls of the File Transfer API.
     *
     * @return string
     */
    public function getRecurringJobId()
    {
        return $this->recurringJobId;
    }

    /**
     * Sets a new recurringJobId
     *
     * Unique ID that is assigned for the recurring job by the Bulk Data Exchange API
     *  after a successful <b>createRecurringJob</ b> call. This value is passed into the request of other recurring job calls of the File Transfer API.
     *
     * @param string $recurringJobId
     * @return self
     */
    public function setRecurringJobId($recurringJobId)
    {
        $this->recurringJobId = $recurringJobId;
        return $this;
    }

    public function xmlSerialize(\Sabre\Xml\Writer $writer)
    {
        parent::xmlSerialize($writer);
        $value = $this->getRecurringJobId();
        if (null !== $value) {
            $writer->writeElement("{http://www.ebay.com/marketplace/services}recurringJobId", $value);
        }
    }

    public static function xmlDeserialize(\Sabre\Xml\Reader $reader)
    {
        return self::fromKeyValue($reader->parseInnerTree([]));
    }

    public static function fromKeyValue($keyValue)
    {
        $self = new self();
        $self->setKeyValue($keyValue);
        return $self;
    }

    public function setKeyValue($keyValue)
    {
        parent::setKeyValue($keyValue);
        $value = Func::mapArray($keyValue, '{http://www.ebay.com/marketplace/services}recurringJobId');
        if (null !== $value) {
            $this->setRecurringJobId($value);
        }
    }
}
